name: üîç COMPLETE PROJECT DIAGNOSIS
on: [push]

jobs:
  diagnose:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: üö® FULL PROJECT ANALYSIS
      run: |
        echo "================================================"
        echo "üö® COMPLETE PROJECT DIAGNOSIS REPORT"
        echo "================================================"
        echo ""
        
        echo "üìÅ CURRENT REPOSITORY STRUCTURE:"
        echo "--------------------------------"
        find . -maxdepth 3 -type f -name "*" | sort
        echo ""
        
        echo "‚ùå MISSING CRITICAL ANDROID FILES:"
        echo "----------------------------------"
        if [ ! -f "app/build.gradle" ]; then
          echo "‚ùå MISSING: app/build.gradle (ESSENTIAL - This defines your Android app)"
        else
          echo "‚úÖ FOUND: app/build.gradle"
        fi
        
        if [ ! -f "app/src/main/AndroidManifest.xml" ]; then
          echo "‚ùå MISSING: app/src/main/AndroidManifest.xml (ESSENTIAL - This defines your app)"
        else
          echo "‚úÖ FOUND: AndroidManifest.xml"
        fi
        
        if [ ! -d "app/src/main/java" ] && [ ! -d "app/src/main/kotlin" ]; then
          echo "‚ùå MISSING: app/src/main/java/ OR app/src/main/kotlin/ (ESSENTIAL - Your app code goes here)"
        else
          echo "‚úÖ FOUND: Source code directory"
        fi
        
        if [ ! -f "build.gradle" ]; then
          echo "‚ùå MISSING: build.gradle (ESSENTIAL - Root build configuration)"
        else
          echo "‚úÖ FOUND: build.gradle"
        fi
        
        if [ ! -f "settings.gradle" ]; then
          echo "‚ùå MISSING: settings.gradle (ESSENTIAL - Project settings)"
        else
          echo "‚úÖ FOUND: settings.gradle"
        fi
        echo ""
        
        echo "üì¶ ZIP FILE ANALYSIS:"
        echo "--------------------"
        for zipfile in *.zip; do
          if [ -f "$zipfile" ]; then
            echo "üîç Analyzing $zipfile:"
            echo "   Size: $(ls -lh "$zipfile" | awk '{print $5}')"
            echo "   Contains Android files?"
            if unzip -l "$zipfile" 2>/dev/null | grep -q "build.gradle\|AndroidManifest.xml"; then
              echo "   ‚úÖ YES - Contains Android project files"
              unzip -l "$zipfile" | grep -E "build.gradle|AndroidManifest.xml|\.kt$|\.java$" | head -5
            else
              echo "   ‚ùå NO - No Android source code found"
              echo "   First 10 files in ZIP:"
              unzip -l "$zipfile" 2>/dev/null | head -10 | tail -n +4
            fi
            echo ""
          fi
        done
        
        echo "üîß BUILD SYSTEM CHECK:"
        echo "---------------------"
        if [ -f "gradlew" ]; then
          echo "‚úÖ gradlew script present"
        else
          echo "‚ùå gradlew script missing"
        fi
        
        if [ -f "gradle/wrapper/gradle-wrapper.jar" ]; then
          echo "‚úÖ gradle-wrapper.jar present"
        else
          echo "‚ùå gradle-wrapper.jar missing"
        fi
        echo ""
        
        echo "üí° PROBLEM SUMMARY:"
        echo "------------------"
        echo "üëâ YOUR REPOSITORY CONTAINS:"
        echo "   - Workflow files (.github/workflows/)"
        echo "   - ZIP files (but they don't contain Android source code)"
        echo "   - Gradle wrapper files"
        echo "   - README.md"
        echo ""
        echo "üëâ YOUR REPOSITORY IS MISSING:"
        echo "   - Android app source code (*.kt or *.java files)"
        echo "   - app/build.gradle file"
        echo "   - app/src/main/ directory with AndroidManifest.xml"
        echo "   - Your actual application code"
        echo ""
        echo "üéØ SOLUTION:"
        echo "------------"
        echo "You need to upload the ACTUAL ANDROID PROJECT FILES, not just the build instructions."
        echo ""
        echo "üìù NEXT STEPS:"
        echo "1. Find your Android Studio project folder"
        echo "2. Upload ALL these folders/files to GitHub:"
        echo "   - app/ folder (with build.gradle and src/)"
        echo "   - gradle/ folder"
        echo "   - build.gradle (root file)"
        echo "   - settings.gradle"
        echo "3. Delete the ZIP files (they're not needed)"
        echo "4. Then the build will work!"
        echo "================================================"
