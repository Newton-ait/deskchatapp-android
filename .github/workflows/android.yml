name: Android Build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract project
      run: |
        echo "📦 Extracting GitSafe.zip..."
        rm -rf app gradle 2>/dev/null || true
        rm -f *.gradle gradlew* 2>/dev/null || true
        unzip -o -q GitSafe.zip
        echo "✅ Extraction complete"
        
    - name: Setup environment
      uses: android-actions/setup-android@v3
      
    - name: Create minimal working build
      run: |
        echo "🔧 Creating minimal build configuration..."
        
        # Create minimal root build.gradle
        cat > build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath "com.android.tools.build:gradle:7.4.2"
            }
        }
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF
        
        # Create minimal app build.gradle with only essential dependencies
        cat > app/build.gradle << 'EOF'
        plugins {
            id 'com.android.application'
        }
        
        android {
            compileSdk 33
            namespace 'com.gitsafe.deskchat'
            
            defaultConfig {
                applicationId "com.gitsafe.deskchat"
                minSdk 21
                targetSdk 33
                versionCode 1
                versionName "1.0"
            }
            
            buildTypes {
                debug {
                    debuggable true
                    minifyEnabled false
                }
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }
        
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'com.google.android.material:material:1.9.0'
            implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
            
            // Remove complex dependencies that are causing issues
            // implementation 'com.google.firebase:firebase-bom:33.2.0'
            // implementation 'com.google.firebase:firebase-analytics-ktx'
            // implementation 'com.google.firebase:firebase-messaging-ktx'
            // implementation 'com.google.dagger:hilt-android:2.51.1'
        }
        EOF
        
        echo "✅ Created minimal build configuration"
        
    - name: Install compatible Gradle
      run: |
        echo "📥 Installing Gradle 7.4.2..."
        wget -q https://services.gradle.org/distributions/gradle-7.4.2-bin.zip
        unzip -d /opt/gradle gradle-7.4.2-bin.zip
        echo "/opt/gradle/gradle-7.4.2/bin" >> $GITHUB_PATH
        
    - name: Build with minimal dependencies
      run: |
        echo "🏗️ Building with minimal dependencies..."
        /opt/gradle/gradle-7.4.2/bin/gradle clean assembleDebug --no-daemon --stacktrace
        
    - name: Check results
      run: |
        echo "🔍 Checking results..."
        find . -name "*.apk" -type f | head -5 || echo "No APK files found"
        if [ -d "app/build/outputs/apk/debug" ]; then
          echo "🎉 SUCCESS: APK directory exists!"
          ls -la app/build/outputs/apk/debug/
        fi
        
    - name: Upload any outputs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-outputs
        path: |
          app/build/outputs/
        retention-days: 30