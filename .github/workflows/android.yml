name: Android Build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract project
      run: |
        echo "📦 Extracting GitSafe.zip..."
        rm -rf app gradle 2>/dev/null || true
        rm -f *.gradle gradlew* 2>/dev/null || true
        unzip -o -q GitSafe.zip
        echo "✅ Extraction complete"
        
    - name: Setup environment
      uses: android-actions/setup-android@v3
      
    - name: Fix build configuration
      run: |
        echo "🔧 Fixing build configuration..."
        
        # Remove corrupted wrapper
        rm -f gradle/wrapper/gradle-wrapper.jar 2>/dev/null || true
        
        # Add Google Services to root build.gradle
        if ! grep -q "com.google.gms:google-services" build.gradle; then
          sed -i '/dependencies {/a\        classpath "com.google.gms:google-services:4.4.0"' build.gradle
          echo "✅ Added Google Services classpath"
        fi
        
        # Ensure google() repository
        if ! grep -q "google()" build.gradle; then
          sed -i '/repositories {/a\        google()' build.gradle
          echo "✅ Added google() repository"
        fi
        
        # Apply Google Services plugin to app
        if ! grep -q "apply plugin.*google-services" app/build.gradle; then
          echo "" >> app/build.gradle
          echo "apply plugin: 'com.google.gms.google-services'" >> app/build.gradle
          echo "✅ Applied Google Services plugin"
        fi
        
    - name: Install working Gradle
      run: |
        echo "📥 Installing Gradle 7.5 (compatible with project)..."
        wget -q https://services.gradle.org/distributions/gradle-7.5-bin.zip
        unzip -d /opt/gradle gradle-7.5-bin.zip
        echo "/opt/gradle/gradle-7.5/bin" >> $GITHUB_PATH
        
    - name: Accept Android licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        
    - name: Build with system Gradle
      run: |
        echo "🏗️ Building with system Gradle..."
        /opt/gradle/gradle-7.5/bin/gradle clean assembleDebug --no-daemon --stacktrace
        
    - name: Check build results
      run: |
        echo "🔍 Checking build outputs..."
        if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "🎉 SUCCESS: APK built successfully!"
          ls -la app/build/outputs/apk/debug/
          echo "::set-output name=build_status::success"
        else
          echo "❌ No APK found. Available files:"
          find app/build/ -type f -name "*.apk" -o -name "*.aab" 2>/dev/null || echo "No build outputs"
          echo "::set-output name=build_status::failed"
        fi
        
    - name: Upload APK
      if: steps.check_build.outputs.build_status == 'success'
      uses: actions/upload-artifact@v4
      with:
        name: deskchat-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          app/build/reports/
          app/build/outputs/
        retention-days: 30
        
    - name: Final report
      run: |
        echo "📊 Final Build Report:"
        echo "✅ Project: DeskChat with Firebase"
        echo "✅ Gradle: System-installed 7.5"
        echo "✅ Fixed: Google Services + Corrupted wrapper"
        echo "📱 Status: Build attempted"