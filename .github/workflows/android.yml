name: Android CI (Full Build, Self-Healing)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3Ô∏è‚É£ Extract ZIP (if your project is inside one)
      - name: Extract GitSafe ZIP
        run: |
          echo "üì¶ Extracting GitSafe.zip..."
          mkdir extracted-project
          unzip -q GitSafe.zip -d extracted-project

      # 4Ô∏è‚É£ Detect Gradle wrapper directory
      - name: Detect Gradle wrapper location
        id: detect
        run: |
          echo "üîç Searching for gradlew..."
          WRAPPER_PATH=$(find extracted-project -type f -name "gradlew" | head -n 1)
          if [ -z "$WRAPPER_PATH" ]; then
            echo "‚ùå gradlew not found!"; exit 1;
          fi
          WRAPPER_DIR=$(dirname "$WRAPPER_PATH")
          echo "‚úÖ Found gradlew in: $WRAPPER_DIR"
          echo "wrapper_dir=$WRAPPER_DIR" >> $GITHUB_OUTPUT

      # 5Ô∏è‚É£ Verify Gradle wrapper (safe and self-healing)
      - name: Verify Gradle wrapper
        run: |
          cd "${{ steps.detect.outputs.wrapper_dir }}"
          echo "üß© Verifying Gradle wrapper..."
          chmod +x gradlew
          if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "‚ö†Ô∏è gradle-wrapper.jar missing ‚Äî restoring official version..."
            mkdir -p gradle/wrapper
            curl -fsSL -o gradle/wrapper/gradle-wrapper.jar \
              https://services.gradle.org/distributions/gradle-8.7-bin.zip
            echo "‚úÖ Official Gradle wrapper JAR restored."
          else
            echo "‚úÖ gradle-wrapper.jar found:"
            ls -lh gradle/wrapper/gradle-wrapper.jar
          fi
          ./gradlew --version

      # 6Ô∏è‚É£ Build Debug & Release APKs
      - name: Build Debug and Release APKs
        run: |
          cd "${{ steps.detect.outputs.wrapper_dir }}"
          echo "üöÄ Building APKs..."
          ./gradlew clean assembleDebug assembleRelease --stacktrace

      # 7Ô∏è‚É£ Upload build artifacts
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: GitSafe-APKs
          path: |
            ${{ steps.detect.outputs.wrapper_dir }}/app/build/outputs/apk/debug/*.apk
            ${{ steps.detect.outputs.wrapper_dir }}/app/build/outputs/apk/release/*.apk