name: Android Build - Fix All XML

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract project
      run: |
        echo "üì¶ Extracting GitSafe.zip..."
        rm -rf app gradle 2>/dev/null || true
        rm -f *.gradle gradlew* 2>/dev/null || true
        unzip -o -q GitSafe.zip
        echo "‚úÖ Extraction complete"
        
    - name: Fix ALL XML resource files
      run: |
        echo "üîß Fixing ALL XML resource files..."
        
        # Find and fix ALL XML files in res directory
        find app/src/main/res -name "*.xml" -type f | while read file; do
          echo "üîç Checking: $file"
          
          # Fix invalid XML declaration
          if head -1 "$file" | grep -q "<?xml"; then
            echo "üìù Fixing XML declaration in $(basename $file)"
            sed -i '1s/.*/<?xml version="1.0" encoding="utf-8"?>/' "$file"
          fi
          
          # Add missing app namespace if needed
          if grep -q 'app:' "$file" && ! grep -q 'xmlns:app="http://schemas.android.com/apk/res-auto"' "$file"; then
            echo "‚ûï Adding app namespace to $(basename $file)"
            sed -i 's|xmlns:android="http://schemas.android.com/apk/res/android"|xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:app="http://schemas.android.com/apk/res-auto"|' "$file"
          fi
          
          # Add missing tools namespace if needed
          if grep -q 'tools:' "$file" && ! grep -q 'xmlns:tools="http://schemas.android.com/tools"' "$file"; then
            echo "‚ûï Adding tools namespace to $(basename $file)"
            sed -i 's|xmlns:android="http://schemas.android.com/apk/res/android"|xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:tools="http://schemas.android.com/tools"|' "$file"
          fi
        done
        
        echo "‚úÖ All XML files checked and fixed"
        
        # Verify the problematic files are fixed
        echo "üîç Verifying fixes..."
        if [ -f "app/src/main/res/layout/item_nearby_desk.xml" ]; then
          echo "üìÑ item_nearby_desk.xml first line:"
          head -1 "app/src/main/res/layout/item_nearby_desk.xml"
        fi
        
    - name: Setup environment
      uses: android-actions/setup-android@v3
      
    - name: Install Gradle 7.5
      run: |
        wget -q https://services.gradle.org/distributions/gradle-7.5-bin.zip
        unzip -d /opt/gradle gradle-7.5-bin.zip
        echo "/opt/gradle/gradle-7.5/bin" >> $GITHUB_PATH
        
    - name: Create build configuration
      run: |
        cat > build.gradle << 'EOF'
        buildscript {
            repositories { google(); mavenCentral() }
            dependencies { classpath "com.android.tools.build:gradle:7.4.2" }
        }
        allprojects {
            repositories { google(); mavenCentral() }
        }
        task clean(type: Delete) { delete rootProject.buildDir }
        EOF
        
        cat > app/build.gradle << 'EOF'
        plugins { id 'com.android.application' }
        android {
            compileSdk 33
            defaultConfig {
                applicationId "com.gitsafe.deskchat"
                minSdk 21
                targetSdk 33
                versionCode 1
                versionName "1.0"
            }
            buildTypes {
                debug { debuggable true; minifyEnabled false }
            }
        }
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'com.google.android.material:material:1.9.0'
            implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
            implementation 'com.airbnb.android:lottie:6.1.0'
        }
        EOF
        
    - name: Accept licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        
    - name: Build with all XML fixes
      run: |
        echo "üèóÔ∏è Building with all XML fixes..."
        /opt/gradle/gradle-7.5/bin/gradle clean assembleDebug --no-daemon --stacktrace
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: deskchat-app
        path: app/build/outputs/apk/debug/*.apk
        if-no-files-found: warn
        retention-days: 30
        
    - name: Final success check
      run: |
        if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "üéâ üéâ üéâ BUILD SUCCESSFUL! üéâ üéâ üéâ"
          echo "üì± APK Size: $(ls -lh app/build/outputs/apk/debug/app-debug.apk | awk '{print $5}')"
          echo "‚úÖ All XML resource errors fixed"
          echo "‚úÖ APK ready for download in artifacts"
        else
          echo "‚ùå Build failed - no APK generated"
          echo "üìÅ Checking what was built:"
          find app/build/ -name "*.apk" -o -name "*.aab" 2>/dev/null || echo "No APK/AAB files found"
        fi