name: Android CI (Full Build)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Extract your GitSafe.zip project
      - name: Extract project
        run: |
          echo "üì¶ Extracting GitSafe project..."
          mkdir -p extracted-project
          unzip -o GitSafe.zip -d extracted-project
          echo "‚úÖ Extraction complete."

      # 3Ô∏è‚É£ Locate your project directory automatically
      - name: Locate project folder
        id: locate
        run: |
          echo "üîç Searching for settings.gradle..."
          PROJECT_DIR=$(find extracted-project -type f -name "settings.gradle*" | head -n 1 | xargs dirname)
          if [ -z "$PROJECT_DIR" ]; then
            echo "‚ùå Could not locate a Gradle project."
            exit 1
          fi
          echo "‚úÖ Found project: $PROJECT_DIR"
          echo "project_dir=$PROJECT_DIR" >> $GITHUB_OUTPUT

      # üß† NEW STEP: Static Gradle Pre-Check
      - name: Static Gradle Configuration Pre-Check
        run: |
          cd ${{ steps.locate.outputs.project_dir }}
          echo "üß† Running Gradle configuration pre-check..."

          if [ ! -f "gradlew" ]; then
            echo "‚ùå Missing gradlew script!"
            exit 1
          fi
          if [ ! -f "build.gradle" ] && [ ! -f "build.gradle.kts" ]; then
            echo "‚ùå No root build.gradle file found!"
            exit 1
          fi
          if [ ! -f "settings.gradle" ] && [ ! -f "settings.gradle.kts" ]; then
            echo "‚ùå Missing settings.gradle file!"
            exit 1
          fi
          if [ ! -f "app/build.gradle" ] && [ ! -f "app/build.gradle.kts" ]; then
            echo "‚ùå No app module found!"
            exit 1
          fi
          echo "‚úÖ Gradle structure looks good."

      # 4Ô∏è‚É£ Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      # 5Ô∏è‚É£ Verify Gradle Wrapper
      - name: Verify Gradle Wrapper
        run: |
          cd ${{ steps.locate.outputs.project_dir }}
          echo "üß© Verifying Gradle wrapper..."
          if [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
            echo "‚ö†Ô∏è gradle-wrapper.jar missing ‚Äî restoring official one..."
            mkdir -p gradle/wrapper
            curl -fsSL -o gradle/wrapper/gradle-wrapper.jar \
              https://raw.githubusercontent.com/gradle/gradle/master/gradle/wrapper/gradle-wrapper.jar
          fi
          chmod +x gradlew
          echo "‚úÖ Gradle Wrapper verified:"
          ./gradlew --version

      # 6Ô∏è‚É£ Build Debug and Release APKs
      - name: Build Debug and Release APKs
        run: |
          cd ${{ steps.locate.outputs.project_dir }}
          echo "üöÄ Building APKs..."
          chmod +x gradlew
          ./gradlew assembleDebug assembleRelease --stacktrace

      # 7Ô∏è‚É£ Upload generated APKs
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: GitSafe-APKs
          path: |
            ${{ steps.locate.outputs.project_dir }}/app/build/outputs/apk/debug/*.apk
            ${{ steps.locate.outputs.project_dir }}/app/build/outputs/apk/release/*.apk