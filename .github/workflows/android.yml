name: Android CI (Full Build)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GRADLE_VERSION: 8.7

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Extract or prepare project
        run: |
          if [ -f deskchatapp-android.zip ]; then
            echo "üì¶ Extracting ZIP..."
            mkdir -p extracted-project
            unzip -q deskchatapp-android.zip -d extracted-project
          else
            echo "üìÅ Copying repo contents..."
            mkdir -p extracted-project
            rsync -av --exclude='extracted-project' --exclude='.git' ./ extracted-project/
          fi

      # ---------------------------
      # Restore Gradle Wrapper JAR
      # ---------------------------
      # Download the official Gradle distribution ZIP and extract the gradle-wrapper.jar
      - name: Restore Gradle Wrapper JAR (from Gradle distribution)
        run: |
          set -euo pipefail
          cd "$GITHUB_WORKSPACE"

          VERSION="${GRADLE_VERSION:-8.7}"
          DIST="gradle-${VERSION}-bin.zip"
          DIST_URL="https://services.gradle.org/distributions/${DIST}"

          echo "üîΩ Downloading Gradle distribution: $DIST_URL"
          # use curl -fSL so non-2xx fails the step
          curl -fSL "$DIST_URL" -o "$DIST" || { echo "‚ùå Failed to download $DIST_URL"; exit 2; }

          echo "üì¶ Extracting gradle-wrapper.jar from $DIST"
          unzip -q "$DIST" -d gradle-dist-temp

          # find the extracted gradle-wrapper.jar, copy to the project's wrapper folder
          SRC_JAR=$(find gradle-dist-temp -type f -path "*/lib/gradle-wrapper.jar" | head -n1)
          if [ -z "$SRC_JAR" ]; then
            echo "‚ùå Could not find gradle-wrapper.jar inside distribution"; ls -R gradle-dist-temp; exit 3
          fi

          mkdir -p extracted-project/gradle/wrapper
          cp -f "$SRC_JAR" extracted-project/gradle/wrapper/gradle-wrapper.jar
          echo "‚úÖ Copied gradle-wrapper.jar to extracted-project/gradle/wrapper/"

          # cleanup
          rm -rf gradle-dist-temp "$DIST"
          echo "‚úÖ Restore step complete"
          
      - name: Make gradlew executable
        run: |
          cd extracted-project
          if [ -f gradlew ]; then
            chmod +x gradlew
            echo "gradlew is present and made executable"
          else
            echo "‚ö†Ô∏è gradlew script not found in project root. If you don't have gradlew, consider adding it or run 'gradle wrapper' locally."
            # do not exit here; depending on project, gradlew may be present after other steps
          fi
          file extracted-project/gradle/wrapper/gradle-wrapper.jar || true

      - name: Verify Gradle Wrapper
        run: |
          cd extracted-project
          echo "üß© Verifying Gradle wrapper..."
          # If gradlew exists, run it; otherwise use java -jar to check the wrapper jar presence
          if [ -x ./gradlew ]; then
            ./gradlew --version
          else
            echo "‚ö†Ô∏è gradlew not executable or not found; checking wrapper JAR..."
            if [ -f gradle/wrapper/gradle-wrapper.jar ]; then
              echo "gradle-wrapper.jar exists; attempting to run wrapper via 'java -cp' fallback"
              # basic check ‚Äî prints jar manifest
              java -jar gradle/wrapper/gradle-wrapper.jar --version || true
            else
              echo "‚ùå gradle-wrapper.jar missing; cannot verify wrapper"
              exit 4
            fi
          fi

      - name: Build Debug and Release APKs
        run: |
          cd extracted-project
          if [ -x ./gradlew ]; then
            ./gradlew clean assembleDebug assembleRelease --no-daemon
          else
            echo "‚ùå gradlew script missing; aborting build (please include gradlew in repo or run 'gradle wrapper' locally)."
            exit 5
          fi

      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: all-apks
          path: |
            extracted-project/**/build/outputs/**/*.apk

      - name: CI Summary
        run: |
          echo "--------------------------------------"
          echo "‚úÖ Android CI Finished (or failed with explicit message)"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Branch: $GITHUB_REF_NAME"
          echo "--------------------------------------"