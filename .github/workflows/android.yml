name: Build APK from ZIP

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: üîç List repo structure before unzip
        run: ls -R

      - name: üì¶ Unzip project (if exists)
        run: |
          mkdir -p workspace
          ZIPFILE=$(find . -name "*.zip" | head -n 1 || true)
          if [ -f "$ZIPFILE" ]; then
            echo "Found zip file: $ZIPFILE"
            unzip -q "$ZIPFILE" -d workspace
          else
            echo "‚ö†Ô∏è No zip file found"
          fi
          echo "Contents after unzip:"
          ls -R workspace || true

      - name: üß† Detect Android project root
        id: detect
        run: |
          ROOT=$(find workspace -name "settings.gradle*" -exec dirname {} \; | head -n 1)
          echo "root=$ROOT" >> $GITHUB_OUTPUT
          echo "Detected project root: $ROOT"

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: üßæ Make Gradle wrapper executable
        run: chmod +x ${{ steps.detect.outputs.root }}/gradlew

      - name: üß± Build Debug APK (with full logs)
        working-directory: ${{ steps.detect.outputs.root }}
        run: |
          ./gradlew clean assembleDebug --stacktrace --info --warning-mode=all

      - name: üì¶ Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: DeskChat-Debug-APK
          path: |
            ${{ steps.detect.outputs.root }}/app/build/outputs/apk/debug/*.apk

      - name: üß± Build Release APK (optional)
        working-directory: ${{ steps.detect.outputs.root }}
        run: |
          ./gradlew assembleRelease --stacktrace --info --warning-mode=all || echo "‚ö†Ô∏è Release skipped"

      - name: üì§ Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: DeskChat-Release-APK
          path: |
            ${{ steps.detect.outputs.root }}/app/build/outputs/apk/release/*.apk
          retention-days: 5

      - name: üß© Save Logs
        if: always()
        run: |
          mkdir -p logs
          cp -r ${{ steps.detect.outputs.root }}/build/reports logs/ || true
        uses: actions/upload-artifact@v4
        with:
          name: gradle-logs
          path: logs