name: Android CI (Full Build)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Extract the ZIP (if building from GitSafe.zip)
      - name: Extract GitSafe project
        run: |
          echo "üîç Checking for GitSafe.zip..."
          if [ -f "GitSafe.zip" ]; then
            mkdir extracted-project
            unzip -o GitSafe.zip -d extracted-project
            echo "‚úÖ Unzipped GitSafe.zip into extracted-project/"
          else
            echo "‚ùå ERROR: GitSafe.zip not found!"
            exit 1
          fi

      # 3Ô∏è‚É£ Set up Java (Temurin 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 4Ô∏è‚É£ Install Android SDK (API 34)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools: 34.0.0
          components: platform-tools

      # 5Ô∏è‚É£ Set up Gradle
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      # 6Ô∏è‚É£ Optional: Decode keystore for signing
      - name: Decode Keystore (if provided)
        if: env.KEYSTORE_BASE64 != ''
        run: |
          mkdir -p app/keystore
          echo "$KEYSTORE_BASE64" | base64 --decode > app/keystore/release-keystore.jks

      # 7Ô∏è‚É£ Build APKs
      - name: Build Debug and Release APKs
        run: |
          cd extracted-project
          chmod +x ./gradlew
          ./gradlew --version
          ./gradlew clean assembleDebug assembleRelease --stacktrace

      # 8Ô∏è‚É£ Upload built APKs as artifacts
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Built-APKs
          path: |
            extracted-project/app/build/outputs/**/*.apk

      # 9Ô∏è‚É£ Optional: Upload mapping file (for release)
      - name: Upload Mapping (optional)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: Proguard-Mapping
          path: |
            extracted-project/app/build/outputs/mapping/release/mapping.txt