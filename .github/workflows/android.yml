name: Android CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Extract and fix project
      run: |
        echo "📦 Extracting and preparing project..."
        # Clean workspace
        find . -maxdepth 1 -type f -name "*.gradle" -delete
        find . -maxdepth 1 -type f -name "gradlew*" -delete
        rm -rf app gradle 2>/dev/null || true
        
        # Extract project
        unzip -o -q GitSafe.zip
        
        # Fix build.gradle files
        echo "🔧 Fixing build configuration..."
        
        # Create fixed root build.gradle
        cat > build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath "com.android.tools.build:gradle:8.1.0"
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF
        
        # Remove problematic plugins from app/build.gradle
        if [ -f "app/build.gradle" ]; then
          sed -i '/com.google.gms.google-services/d' app/build.gradle
          sed -i '/apply plugin.*google-services/d' app/build.gradle
          echo "✅ Removed Google Services plugin"
        fi
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install working Gradle
      run: |
        echo "📥 Installing Gradle 8.5..."
        wget -q https://services.gradle.org/distributions/gradle-8.5-bin.zip
        unzip -d /opt/gradle gradle-8.5-bin.zip
        echo "/opt/gradle/gradle-8.5/bin" >> $GITHUB_PATH
        
    - name: Build only Debug APK
      run: |
        echo "🏗️ Building Debug APK..."
        /opt/gradle/gradle-8.5/bin/gradle clean assembleDebug --no-daemon --stacktrace
        
    - name: Check for APK
      run: |
        echo "🔍 Checking build results..."
        if [ -d "app/build/outputs/apk/debug" ]; then
          echo "✅ APK directory found"
          ls -la app/build/outputs/apk/debug/
          APK_COUNT=$(find app/build/outputs/apk/debug -name "*.apk" | wc -l)
          echo "📱 Found $APK_COUNT APK file(s)"
        else
          echo "❌ No APK directory found"
          echo "📁 Build outputs:"
          find app/build/outputs/ -type f 2>/dev/null | head -10 || echo "No build outputs"
        fi
        
    - name: Upload any build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-results
        path: |
          app/build/outputs/
          *.log
        retention-days: 30
        
    - name: Build report
      run: |
        echo "📊 Final Build Report:"
        echo "📦 Source: GitSafe.zip"
        echo "🔧 Gradle: System-installed 8.5"
        echo "📱 Target: Debug APK only"
        echo "✅ Process completed"